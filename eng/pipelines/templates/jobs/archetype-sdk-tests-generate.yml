parameters:
- name: AdditionalParameters
  type: object
- name: CloudConfig
  type: object
  default: {}
- name: MatrixConfigs
  type: object
  default: []

jobs:
- ${{ each config in parameters.MatrixConfigs }}:
  - job: generate_matrix_${{ config.Name }}
    variables:
      filter: $[ coalesce(variables.jobMatrixFilter, '.*') ]
    pool:
      vmImage: "ubuntu-18.04"
    displayName: Generate ${{ config.Name }} matrix
    steps:
      - pwsh: |
          Write-Host "FILTER: $(filter)"
          eng/scripts/job-matrix/Create-JobMatrix.ps1 `
            -ConfigPath ${{ config.Path }} `
            -Selection ${{ config.Selection }} `
            -DisplayNameFilter "$(filter)" `
            -Filters @("!container")
        name: generate_job_matrix_${{ config.Name }}
        displayName: Generate Job Matrix

      - ${{ if eq(config.EnableContainer, 'true') }}:
        - pwsh: |
            Write-Host "FILTER: $(filter)"
            eng/scripts/job-matrix/Create-JobMatrix.ps1 `
              -ConfigPath ${{ config.Path }} `
              -Selection ${{ config.Selection }} `
              -DisplayNameFilter "$(filter)" `
              -Filters @("container=.*")
          name: generate_container_job_matrix_${{ config.Name }}
          displayName: Generate Container Job Matrix

  - template: ./archetype-sdk-tests-jobs.yml
    parameters:
      UsePlatformContainer: false
      Matrix: $[ dependencies.generate_matrix_${{ config.Name }}.outputs['generate_job_matrix_${{ config.Name }}.matrix'] ]
      DependsOn: generate_matrix_${{ config.Name }}
      CloudConfig: ${{ parameters.CloudConfig }}
      ${{ each param in parameters.AdditionalParameters }}:
        ${{ param.key }}: ${{ param.value }}

  - ${{ if eq(config.EnableContainer, 'true') }}:
    - template: ./archetype-sdk-tests-jobs.yml
      parameters:
        UsePlatformContainer: true
        Matrix: $[ dependencies.generate_matrix_${{ config.Name }}.outputs['generate_container_job_matrix_${{ config.Name }}.matrix'] ]
        DependsOn: generate_matrix_${{ config.Name }}
        CloudConfig: ${{ parameters.CloudConfig }}
        ${{ each param in parameters.AdditionalParameters }}:
          ${{ param.key }}: ${{ param.value }}
